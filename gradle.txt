gradle for android

	preface(前言)
	
			安卓应用的构建程序是极复杂的程序并且涉及很多工具。最开始，在java代码被编译，通过dex工具
		
		编译为Dalvik字节码前，所有的资源文件会被编译并引用在一个R.java文件中。这些文件最后都会
		
		被打包进apk文件中，在apk能被安装到设备上之前，还需要使用调试或发布时的key进行签名。
		
			手动的完成这些步骤将会是很乏味且耗时的工作。幸运的是，一个安卓工具小组连续的为开发者们
		
		提供了处理整个过程的工具，2013年，他们为构建安卓app推出了一个新的首选构建系统，Gradle。
		
		Gradle具有很好的延展性并且能够插入到现有的构建过程中。他提供了一个类似Groovy的领域特定语言
		
		来声明生成和创建任务，能够很容易的管理依赖。另外，他完全是免费和开源的。
		
			到目前为止，大多数的开发者都选择了Gradle，但是很多开发者都不知道该如何更好的使用他，
		
		并且未认识到仅几行代码能实现什么。这本书的目标就是帮助这些开发者们，让他们能更好的使用
		
		Gradle。本书从android环境中下Gradle的基础开始，讲解依赖、构建变量、测试、创建任务等
		
	一。使用android studio配合gradle开始。
		
			当google在介绍android studio和gradle的时候，他们有很多的目标。他们想让gradle可以很简单
		
		的去重用代码、创建构建变体、配置和定制构建过程。更上一层，他们想要一个能很好结合的IDE
		
		并且让构建系统不依赖于IDE。运用命令行或者一个延展服务来执行gradle都会得到使用android studio和gradle的时候，他们有很多的目标。他们想让gradle可以很简单
		
		运行一样的结果。
		
			本书我有时候将使用android studio的延展服务，因为他经常提供一个简单的方式去调试工程、

		处理变化等等。如果你还没有安装android studio，你需要下载...........
			
			本节话题:
			1.了解android studio
			2.了解gradle基础。
			3.创建新的工程
			4.使用Gradle
			5.从eclipse迁移。
			
		
		
		
		命令：gradlew tasks 打印出可见任务的列表。添加 --all参数，能看到每个任务的详细依赖。
		
			Android tasks
			-------------
			androidDependencies - Displays the Android dependencies of the project.
			signingReport - Displays the signing info for each variant.
			sourceSets - Prints out all the source sets defined in this project.

			Build tasks
			-----------
			assemble - Assembles all variants of all applications and secondary packages.
			assembleAndroidTest - Assembles all the Test applications.
			assembleDebug - Assembles all Debug builds.
			assembleRelease - Assembles all Release builds.
			build - Assembles and tests this project.
			buildDependents - Assembles and tests this project and all projects that depend on it.
			buildNeeded - Assembles and tests this project and all projects it depends on.
			clean - Deletes the build directory.
			cleanBuildCache - Deletes the build cache directory.
			compileDebugAndroidTestSources
			compileDebugSources
			compileDebugUnitTestSources
			compileReleaseSources
			compileReleaseUnitTestSources
			extractDebugAnnotations - Extracts Android annotations for the debug variant into the archive file
			extractReleaseAnnotations - Extracts Android annotations for the release variant into the archive file
			mockableAndroidJar - Creates a version of android.jar that's suitable for unit tests.

			Build Setup tasks
			-----------------
			init - Initializes a new Gradle build.
			wrapper - Generates Gradle wrapper files.

			Help tasks
			----------
			buildEnvironment - Displays all buildscript dependencies declared in root project 'MyCode'.
			components - Displays the components produced by root project 'MyCode'. [incubating]
			dependencies - Displays all dependencies declared in root project 'MyCode'.
			dependencyInsight - Displays the insight into a specific dependency in root project 'MyCode'.
			dependentComponents - Displays the dependent components of components in root project 'MyCode'. [incubating]
			help - Displays a help message.
			model - Displays the configuration model of root project 'MyCode'. [incubating]
			projects - Displays the sub-projects of root project 'MyCode'.
			properties - Displays the properties of root project 'MyCode'.
			tasks - Displays the tasks runnable from root project 'MyCode' (some of the displayed tasks may belong to subprojects).

			Install tasks
			-------------
			installDebug - Installs the Debug build.
			installDebugAndroidTest - Installs the android (on device) tests for the Debug build.
			uninstallAll - Uninstall all applications.
			uninstallDebug - Uninstalls the Debug build.
			uninstallDebugAndroidTest - Uninstalls the android (on device) tests for the Debug build.
			uninstallRelease - Uninstalls the Release build.

			Verification tasks
			------------------
			check - Runs all checks.
			connectedAndroidTest - Installs and runs instrumentation tests for all flavors on connected devices.
			connectedCheck - Runs all device checks on currently connected devices.
			connectedDebugAndroidTest - Installs and runs the tests for debug on connected devices.
			deviceAndroidTest - Installs and runs instrumentation tests using all Device Providers.
			deviceCheck - Runs all device checks using Device Providers and Test Servers.
			lint - Runs lint on all variants.
			lintDebug - Runs lint on the Debug build.
			lintRelease - Runs lint on the Release build.
			lintVitalRelease - Runs lint on just the fatal issues in the release build.
			test - Run unit tests for all variants.
			testDebugUnitTest - Run unit tests for the debug build.
			testReleaseUnitTest - Run unit tests for the release build.
		
		buildscript : apps and libraries需要的仓库
		allprojects : all modules
		
		
		
		
		
		
		